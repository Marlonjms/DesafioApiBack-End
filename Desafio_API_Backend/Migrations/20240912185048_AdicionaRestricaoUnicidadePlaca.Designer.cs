// <auto-generated />
using System;
using Desafio_API_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Desafio_API_Backend.Migrations
{
    [DbContext(typeof(ContextoBancoDeDados))]
    [Migration("20240912185048_AdicionaRestricaoUnicidadePlaca")]
    partial class AdicionaRestricaoUnicidadePlaca
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Desafio_API_Backend.Modelos.Locacao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("DataLocao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdMoto")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("IdMoto");

                    b.ToTable("locacaos");
                });

            modelBuilder.Entity("Desafio_API_Backend.Modelos.Moto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("Motos");
                });

            modelBuilder.Entity("Desafio_API_Backend.Modelos.Locacao", b =>
                {
                    b.HasOne("Desafio_API_Backend.Modelos.Moto", "MotoRelacionada")
                        .WithMany("Alocacoes")
                        .HasForeignKey("IdMoto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MotoRelacionada");
                });

            modelBuilder.Entity("Desafio_API_Backend.Modelos.Moto", b =>
                {
                    b.Navigation("Alocacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
